output_dirname: 'ks_df'
preprocessing:
  # All preprocessing steps
  # As list because run order is preserved
  # All params are passed to relevant function in spikeinterface
  - 
    step_name: bandpass_filter # si.bandpass_filter
    step_params: 
      freq_min: 300.0
      freq_max: 12000.0
  -
    step_name: phase_shift # si.phase_shift
    step_params: {}
  -
    step_name: common_reference # si.common_reference
    step_params:
      reference: 'local'
      operator: 'median'
  -
    step_name: whiten # si.whiten, NB: Need to scale if whitening!
    step_params: {}
  -
    step_name: scale # si.scale, NB: Only if whitening
    step_params:
      gain: 200.0
      offset: 0.0
  -
    step_name: drift_correction # preprocess_si_rec._prepro_drift_correction
    step_params:
      job_kwargs:
        # SI params (parallelize preprocessing/dumping)
        n_jobs: 20  # Possibly errors if too much compared to #chunks
        chunk_duration: "1s"
      # One param dict for each substep
      noise_level_params: {}
      peak_detection_params:
        method: 'locally_exclusive'
        local_radius_um: 150
        peak_sign: 'neg'
        detect_threshold: 5
        exclude_sweep_ms: 0.1
      peak_localization_method: 'center_of_mass'
      peak_localization_params:
        # Common to "monopolar_triangulation" and "center_of_mass" methods
        ms_before: 0.3
        ms_after: 0.6
        local_radius_um: 150.0
        # Below only for "monopolar_triangulation" method
        # max_distance_um: 1000
        # optimizer: 'minimize_with_log_penality'
      motion_method_params:
        pairwise_displacement_method: 'conv'
        # pairwise_displacement_method: 'phase_cross_correlation'
        # convergence_method: 'gradient_descent'
        convergence_method: 'lsqr_robust'
        # conv_engine: 'torch'
        conv_engine: 'numpy'
        corr_threshold: 0.7
      non_rigid_params:
        bin_step_um: 1000.0  # Size of y-axis chunks
      clean_motion_params: null  # No motion cleaning if null. Probably a good idea for concatenated bouts
        # speed_threshold: 30  # um/sec
        # sigma_smooth_s: 5.0
      motion_params: 
        bin_duration_s: 10.0
        bin_um: 10.0  # Should be smaller than non_rigid_params.bin_step_um
sorting:
  - kilosort2_5 # Sorter name
  - # Sorter params
    ks_path: "/Volumes/scratch/neuropixels/matlab/external/Kilosort-wisc-v2.5"
    do_preprocessing: False # MANDATORY FALSE
    detect_threshold: 6
    projection_threshold: [10, 4]
    preclust_threshold: 8
    car: True
    minFR: 0.1
    minfr_goodchannels: 0.1
    nblocks: 5
    do_correction: True
    sig: 20
    lam: 10
    freq_min: 150
    sigmaMask: 30
    nPCs: 3
    ntbuff: 64
    nfilt_factor: 4
    NT: null
    keep_good_only: False
    # SI params (parallelize preprocessing/dumping)
    n_jobs: 20  # TODO: benchmark
    chunk_duration: "1s"  # TODO: benchmark
postprocessing: {}
metrics:
  # https://allensdk.readthedocs.io/en/latest/_static/examples/nb/ecephys_quality_metrics.html
  firing_rate: {}
  amplitude_cutoff: {}
  presence_ratio: {}
  isi_violation:
    isi_threshold_ms: 1.5
  snr: {}
  nn_hit_rate: {}
  nn_miss_rate: {}
  nn_isolation: {}
  nn_noise_overlap: {}
  d_prime: {}
  isolation_distance: {}
  l_ratio: {}
  # ...  # https://spikeinterface.readthedocs.io/en/latest/module_qualitymetrics.html
  _multipro_params:
    n_jobs: 40  # TODO: benchmark
    chunk_duration: "1s"  # TODO: benchmark
    progress_bar: True